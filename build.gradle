plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter { //отвечает за появление папки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

group 'com.andersenlab.people'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.17.3",
    selenideVersion = "6.12.2",
    junitVersion = "5.8.2",
    restAssuredVersion = "4.3.1",
    ownerVersion = "1.0.12",
    assertJVersion = "3.19.0",
    aspectJWeaverVersion = "1.9.6",
    slf4jVersion = "1.7.29",
    javaFakerVersion = "1.0.2"

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-path:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.aspectj:aspectjweaver:$aspectJWeaverVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "io.appium:java-client:8.3.0",
            "com.codeborne:selenide-appium:2.5.2"
    )
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:2.0.5"
    )
}

test {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        if (System.getProperty("tag") != null && !System.getProperty("tag").isEmpty()) {
            includeTags System.getProperty("tag")
        }
    }

    if (System.getProperty("threads") != null && !System.getProperty("threads").isEmpty()) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }
}